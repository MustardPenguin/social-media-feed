{{ $namespace := .Values.global.microservicesNamespace }}
{{- with .Values }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-service-deployment
  namespace: {{ $namespace }}
spec:
  selector:
    matchLabels:
      app: post-service
  template:
    metadata:
      labels:
        app: post-service
    spec:
      containers:
        - name: post-service-container
          image: {{ .podImage }}
          ports:
            - containerPort: {{ .servicePort }}
          env:
            {{- range .env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
            - name: EUREKA_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ $.Values.global.infrastructureConfigMapName }}
                  key: EUREKA_HOST
---
apiVersion: v1
kind: Service
metadata:
  name: post-service
  namespace: {{ $namespace }}
spec:
  selector:
    app: post-service
  ports:
    - protocol: TCP
      port: {{ .servicePort }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: post-postgres
  namespace: {{ $namespace }}
spec:
  serviceName: postgres-headless
  selector:
    matchLabels:
      app: post-postgres
  template:
    metadata:
      labels:
        app: post-postgres
        database: postgres
    spec:
      containers:
        - name: post-postgres-container
          image: {{ $.Values.global.postgresImage }}
          ports:
            - containerPort: {{ $.Values.global.postgresPort }}
          env:
            - name: POSTGRES_USER
              value: user
            - name: POSTGRES_PASSWORD
              value: admin
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: post-redis
  namespace: {{ $namespace }}
spec:
  serviceName: redis-headless
  selector:
    matchLabels:
      app: post-redis
  template:
    metadata:
      labels:
        app: post-redis
        database: redis
    spec:
      containers:
        - name: post-redis-container
          image: {{ $.Values.global.redisImage }}
          ports:
            - containerPort: {{ $.Values.global.redisPort }}
          env:
            - name: REDIS_PASSWORD
              value: {{ .redisPassword }}
{{- end }}
---