# Default values for infrastructure.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

busyboxImage: busybox:1.36.1

eurekaService:
  image: com.social.media.feed/eureka-service:1.0-SNAPSHOT
  port: 8761
  replicas: 1

apiGatewayService:
  image: com.social.media.feed/api-gateway-service:1.0-SNAPSHOT
  port: 8080
  replicas: 1
  env:
    - name: EUREKA_HOST
      value: http://eureka-service

kafka:
  image: confluentinc/cp-kafka:latest
  replicas: 3
  port: 9092
  env:
    - name: KAFKA_LISTENERS
      value: BROKER://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
    - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
      value: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT
    - name: KAFKA_INTER_BROKER_LISTENER_NAME
      value: BROKER
    - name: KAFKA_CONTROLLER_LISTENER_NAMES
      value: CONTROLLER
    - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
      value: 3
    - name: KAFKA_COMPRESSION_TYPE
      value: producer
    - name: KAFKA_PROCESS_ROLES
      value: controller,broker
    - name: CLUSTER_ID
      value: f1p7ULGbT_qGDINRRLoz7g

schemaRegistry:
  image: confluentinc/cp-schema-registry:latest
  replicas: 1
  port: 8081
  env:
    - name: SCHEMA_REGISTRY_HOST_NAME
      value: schema-registry
    - name: SCHEMA_REGISTRY_LISTENERS
      value: http://0.0.0.0:8081
    - name: SCHEMA_REGISTRY_DEBUG
      value: 'true'

debezium:
  # The debezium docker file for this image should be available in the deployment/docker-compose directory
  image: com.social.media.feed/debezium-connect:1.0-SNAPSHOT
  port: 8083
  env:
    - name: GROUP_ID
      value: 1
    - name: CONFIG_STORAGE_TOPIC
      value: "connect-config"
    - name: OFFSET_STORAGE_TOPIC
      value: "connect-offsets"
    - name: STATUS_STORAGE_TOPIC
      value: "connect-status"
    - name: CONNECT_SCHEMA_NAME_ADJUSTMENT_MODE
      value: avro
    - name: KEY_CONVERTER
      value: io.confluent.connect.avro.AvroConverter
    - name: VALUE_CONVERTER
      value: io.confluent.connect.avro.AvroConverter

kafkaUI:
  image: provectuslabs/kafka-ui:latest
  port: 8080
  env:
    - name: KAFKA_CLUSTERS_0_NAME
      value: cluster


image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
