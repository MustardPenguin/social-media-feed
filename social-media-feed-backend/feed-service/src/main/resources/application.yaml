

# Application config
server:
  port: 8183

logging:
  level:
    org:
      springframework: ${LOGGING_LEVEL:INFO}

apiGatewayHost: ${API_GATEWAY_HOST:http://localhost}:8080

# Service registry config
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_HOST:http://localhost}:8761/eureka/
  instance:
    prefer-ip-address: true

# Database config
spring:
  application:
    name: feed-service
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/postgres?stringtype=unspecified&currentSchema=feed
    username: ${DATABASE_USER:user}
    password: ${DATABASE_PASSWORD:admin}
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      schema-locations: classpath:init-schema.sql
      platform: postgres
      mode: always
  jpa:
    open-in-view: false
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:admin}

# Kafka config
kafka-config-data:
  bootstrap-server: ${BOOTSTRAP_SERVERS:localhost:19092,localhost:29092,localhost:39092}
  schema-registry-url: ${SCHEMA_REGISTRY_HOST:http://localhost}:8081
  schema-registry-url-key: schema.registry.url
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true

kafka-consumer-topics:
  post-created-event: post_created.post.post_created_events
  follow-created-event: follow_created.account.follow_created_events